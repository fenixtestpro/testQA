{
	"info": {
		"_postman_id": "942c3bd4-2109-456b-8c4f-e50180785e5e",
		"name": "postman_home_work",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "home_work_login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "spaun",
							"type": "text"
						},
						{
							"key": "password",
							"value": "spaun",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/login",
					"host": [
						"{{url2}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "home_work_user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							" pm.test(\"check_age\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.person.u_age).to.eql(100);\r",
							"       });\r",
							"\r",
							"pm.test(\"check_salary\", function() {\r",
							"    let responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.qa_salary_after_6_months).to.eql(responseJson.start_qa_salary*2); \r",
							"     pm.expect(responseJson.qa_salary_after_12_months).to.eql(responseJson.start_qa_salary*2.9); \r",
							"      pm.expect(responseJson.person.u_salary_1_5_year).to.eql(responseJson.start_qa_salary*4); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"age\":100,\r\n\r\n \"name\" :\"sergey\",\r\n \"salary\" :1000,\r\n \"auth_token\" :\"{{token}}\"\r\n\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url2}}/user_info",
					"host": [
						"{{url2}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//проверка статусткода 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"//проверка имени в ответе\r",
							"pm.test(\"check_name\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.name).to.eql(\"sergey\");\r",
							"       });\r",
							"\r",
							"// проверка возраста в ответе\r",
							" pm.test(\"check_age\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.age).to.eql(100);\r",
							"       });\r",
							"// проверка salary\r",
							"   let req = request.data\r",
							"   let req_salary = req.salary\r",
							"\r",
							" console.log(req_salary)\r",
							"// проверка ответов json\r",
							"pm.test(\"check_salary\", function() {\r",
							"   let jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.salary[0]).to.eql(1000);\r",
							"   pm.expect(jsonData.salary[1]).to.eql(\"2000\");\r",
							"   pm.expect(jsonData.salary[2]).to.eql(\"3000\");\r",
							"\r",
							" });    \r",
							"\r",
							"\r",
							"\r",
							" pm.test(\"check *\", function() {\r",
							"  let jsonData = pm.response.json();\r",
							"\r",
							"pm.expect(parseInt(jsonData.salary[1])).to.eql(jsonData.salary[0]*2);\r",
							"pm.expect(parseInt(jsonData.salary[2])).to.eql(jsonData.salary[0]*3);\r",
							" });\r",
							"\r",
							"\r",
							"  pm.test(\"check that [2]>[1],[2]>[0]\", function() {\r",
							"  let jsonData = pm.response.json();\r",
							"\r",
							"pm.expect(parseInt(jsonData.salary[2])).to.be.above(jsonData.salary[0]);\r",
							"pm.expect(parseInt(jsonData.salary[2])).to.be.above(parseInt(jsonData.salary[1]));\r",
							" });\r",
							"\r",
							"\r",
							"\r",
							" \r",
							" \r",
							"  \r",
							"\r",
							"    \r",
							"       \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "100",
							"type": "text"
						},
						{
							"key": "name",
							"value": "sergey",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/new_data",
					"host": [
						"{{url2}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"  pm.test(\"check_age\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.age).to.eql(5);\r",
							"       });\r",
							"\r",
							"   pm.test(\"daily_food\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.daily_food).to.eql(weight * 0.012,);\r",
							"       });\r",
							"\r",
							"   \r",
							"\r",
							"   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "5",
							"type": "text"
						},
						{
							"key": "name",
							"value": "mohito",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text",
							"disabled": true
						},
						{
							"key": "weight",
							"value": "5",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/test_pet_info",
					"host": [
						"{{url2}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"  pm.test(\"check_age\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.age).to.eql(5);\r",
							"       });\r",
							"\r",
							"\r",
							"  var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"weight\", jsonData.weight);\r",
							"\r",
							"\r",
							"   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "5",
							"type": "text"
						},
						{
							"key": "name",
							"value": "mohito",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text",
							"disabled": true
						},
						{
							"key": "weight",
							"value": "5",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/test_pet_info",
					"host": [
						"{{url2}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							" pm.test(\"check_age\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.age).to.eql(\"100\");\r",
							"       });\r",
							"\r",
							"  pm.test(\"check_age\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.age).to.eql(\"100\");\r",
							"       });      \r",
							"\r",
							" pm.test(\"u_salary\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.salary).to.eql(2000);\r",
							"       });\r",
							"\r",
							" pm.test(\"u_salary_1_5_year\", function() {\r",
							"       var jsonData = pm.response.json();\r",
							"       pm.expect(jsonData.family.u_salary_1_5_year).to.eql(jsonData.salary*4);\r",
							"       });      "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "100",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "makar",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url2}}/get_test_user",
					"host": [
						"{{url2}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		}
	]
}